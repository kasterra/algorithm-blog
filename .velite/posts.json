[
  {
    "title": "sample title",
    "date": "2025-08-22",
    "summary": "A gentle introduction to the two-pointer pattern with classic examples. ",
    "category": "Arrays & Strings",
    "tags": [
      "two-pointers",
      "patterns",
      "arrays"
    ],
    "readTime": "5 min",
    "difficulty": "Easy",
    "code": "const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(r){const i={h1:\"h1\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",strong:\"strong\",ul:\"ul\",...r.components},{CHCode:o}=i;return o||function(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}(\"CHCode\",!0),t(n,{children:[e(i.p,{children:\"The two-pointer technique is one of the most elegant and efficient approaches for solving array and string problems. This pattern involves using two pointers that traverse the data structure in a coordinated manner, often leading to optimal O(n) time complexity solutions.\"}),\"\\n\",e(i.h2,{children:\"Understanding the Two-Pointer Pattern\"}),\"\\n\",e(i.p,{children:\"The two-pointer technique works by maintaining two references (pointers) to elements in an array or string. These pointers can move:\"}),\"\\n\",t(i.ul,{children:[\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Towards each other\"}),\" (convergent approach)\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"In the same direction\"}),\" (sliding window approach)\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"At different speeds\"}),\" (fast and slow pointers)\"]}),\"\\n\"]}),\"\\n\",e(i.h2,{children:\"Classic Problem: Two Sum in Sorted Array\"}),\"\\n\",e(i.p,{children:\"Let's start with a fundamental example. Given a sorted array and a target sum, find two numbers that add up to the target.\"}),\"\\n\",e(o,{codeblock:{value:'def two_sum_sorted(nums, target):\\n    \"\"\"\\n    Find two numbers in a sorted array that sum to target.\\n    Time: O(n), Space: O(1)\\n    \"\"\"\\n    left, right = 0, len(nums) - 1\\n    \\n    while left < right:\\n        current_sum = nums[left] + nums[right]\\n        \\n        if current_sum == target:\\n            return [left, right]\\n        elif current_sum < target:\\n            left += 1  # Need larger sum\\n        else:\\n            right -= 1  # Need smaller sum\\n    \\n    return []  # No solution found\\n\\n# Example usage\\nnums = [2, 7, 11, 15]\\ntarget = 9\\nresult = two_sum_sorted(nums, target)\\nprint(f\"Indices: {result}\")  # Output: [0, 1]',lang:\"python\",meta:\"\",code:'def two_sum_sorted(nums, target):\\n    \"\"\"\\n    Find two numbers in a sorted array that sum to target.\\n    Time: O(n), Space: O(1)\\n    \"\"\"\\n    left, right = 0, len(nums) - 1\\n    \\n    while left < right:\\n        current_sum = nums[left] + nums[right]\\n        \\n        if current_sum == target:\\n            return [left, right]\\n        elif current_sum < target:\\n            left += 1  # Need larger sum\\n        else:\\n            right -= 1  # Need smaller sum\\n    \\n    return []  # No solution found\\n\\n# Example usage\\nnums = [2, 7, 11, 15]\\ntarget = 9\\nresult = two_sum_sorted(nums, target)\\nprint(f\"Indices: {result}\")  # Output: [0, 1]',tokens:[[\"def\",\"#FF7B72\"],\" \",[\"two_sum_sorted\",\"#D2A8FF\"],[\"(nums, target):\",\"#C9D1D9\"],\"\\n    \",['\"\"\"',\"#A5D6FF\"],\"\\n    \",[\"Find two numbers in a sorted array that sum to target.\",\"#A5D6FF\"],\"\\n    \",[\"Time: O(n), Space: O(1)\",\"#A5D6FF\"],\"\\n    \",['\"\"\"',\"#A5D6FF\"],\"\\n    \",[\"left, right\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"len\",\"#79C0FF\"],[\"(nums)\",\"#C9D1D9\"],\" \",[\"-\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],\"\\n    \\n    \",[\"while\",\"#FF7B72\"],\" \",[\"left\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"right:\",\"#C9D1D9\"],\"\\n        \",[\"current_sum\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"nums[left]\",\"#C9D1D9\"],\" \",[\"+\",\"#FF7B72\"],\" \",[\"nums[right]\",\"#C9D1D9\"],\"\\n        \\n        \",[\"if\",\"#FF7B72\"],\" \",[\"current_sum\",\"#C9D1D9\"],\" \",[\"==\",\"#FF7B72\"],\" \",[\"target:\",\"#C9D1D9\"],\"\\n            \",[\"return\",\"#FF7B72\"],\" \",[\"[left, right]\",\"#C9D1D9\"],\"\\n        \",[\"elif\",\"#FF7B72\"],\" \",[\"current_sum\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"target:\",\"#C9D1D9\"],\"\\n            \",[\"left\",\"#C9D1D9\"],\" \",[\"+=\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],\"  \",[\"# Need larger sum\",\"#8B949E\"],\"\\n        \",[\"else\",\"#FF7B72\"],[\":\",\"#C9D1D9\"],\"\\n            \",[\"right\",\"#C9D1D9\"],\" \",[\"-=\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],\"  \",[\"# Need smaller sum\",\"#8B949E\"],\"\\n    \\n    \",[\"return\",\"#FF7B72\"],\" \",[\"[]\",\"#C9D1D9\"],\"  \",[\"# No solution found\",\"#8B949E\"],\"\\n\\n\",[\"# Example usage\",\"#8B949E\"],\"\\n\",[\"nums\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"[\",\"#C9D1D9\"],[\"2\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"7\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"11\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"15\",\"#79C0FF\"],[\"]\",\"#C9D1D9\"],\"\\n\",[\"target\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"9\",\"#79C0FF\"],\"\\n\",[\"result\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"two_sum_sorted(nums, target)\",\"#C9D1D9\"],\"\\n\",[\"print\",\"#79C0FF\"],[\"(\",\"#C9D1D9\"],[\"f\",\"#FF7B72\"],['\"Indices:',\"#A5D6FF\"],\" \",[\"{\",\"#79C0FF\"],[\"result\",\"#C9D1D9\"],[\"}\",\"#79C0FF\"],['\"',\"#A5D6FF\"],[\")\",\"#C9D1D9\"],\"  \",[\"# Output: [0, 1]\",\"#8B949E\"]],annotations:[],themeName:\"github-dark\",style:{color:\"#c9d1d9\",background:\"#0d1117\",colorScheme:\"dark\"}}}),\"\\n\",e(i.p,{children:\"The beauty of this approach lies in its simplicity and efficiency. By leveraging the sorted property, we can make intelligent decisions about which pointer to move.\"}),\"\\n\",e(i.h2,{children:\"Advanced Example: Container With Most Water\"}),\"\\n\",e(i.p,{children:\"Here's a more complex problem that demonstrates the power of two pointers:\"}),\"\\n\",e(o,{codeblock:{value:\"function maxArea(height) {\\n    /**\\n     * Find the container that can hold the most water\\n     * Time: O(n), Space: O(1)\\n     */\\n    let left = 0;\\n    let right = height.length - 1;\\n    let maxWater = 0;\\n    \\n    while (left < right) {\\n        // Calculate current area\\n        const width = right - left;\\n        const currentHeight = Math.min(height[left], height[right]);\\n        const currentArea = width * currentHeight;\\n        \\n        maxWater = Math.max(maxWater, currentArea);\\n        \\n        // Move the pointer with smaller height\\n        if (height[left] < height[right]) {\\n            left++;\\n        } else {\\n            right--;\\n        }\\n    }\\n    \\n    return maxWater;\\n}\\n\\n// Example\\nconst heights = [1, 8, 6, 2, 5, 4, 8, 3, 7];\\nconsole.log(maxArea(heights)); // Output: 49\",lang:\"javascript\",meta:\"\",code:\"function maxArea(height) {\\n    /**\\n     * Find the container that can hold the most water\\n     * Time: O(n), Space: O(1)\\n     */\\n    let left = 0;\\n    let right = height.length - 1;\\n    let maxWater = 0;\\n    \\n    while (left < right) {\\n        // Calculate current area\\n        const width = right - left;\\n        const currentHeight = Math.min(height[left], height[right]);\\n        const currentArea = width * currentHeight;\\n        \\n        maxWater = Math.max(maxWater, currentArea);\\n        \\n        // Move the pointer with smaller height\\n        if (height[left] < height[right]) {\\n            left++;\\n        } else {\\n            right--;\\n        }\\n    }\\n    \\n    return maxWater;\\n}\\n\\n// Example\\nconst heights = [1, 8, 6, 2, 5, 4, 8, 3, 7];\\nconsole.log(maxArea(heights)); // Output: 49\",tokens:[[\"function\",\"#FF7B72\"],\" \",[\"maxArea\",\"#D2A8FF\"],[\"(\",\"#C9D1D9\"],[\"height\",\"#FFA657\"],[\") {\",\"#C9D1D9\"],\"\\n    \",[\"/**\",\"#8B949E\"],\"\\n     \",[\"* Find the container that can hold the most water\",\"#8B949E\"],\"\\n     \",[\"* Time: O(n), Space: O(1)\",\"#8B949E\"],\"\\n     \",[\"*/\",\"#8B949E\"],\"\\n    \",[\"let\",\"#FF7B72\"],\" \",[\"left\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\";\",\"#C9D1D9\"],\"\\n    \",[\"let\",\"#FF7B72\"],\" \",[\"right\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"height.\",\"#C9D1D9\"],[\"length\",\"#79C0FF\"],\" \",[\"-\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],[\";\",\"#C9D1D9\"],\"\\n    \",[\"let\",\"#FF7B72\"],\" \",[\"maxWater\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\";\",\"#C9D1D9\"],\"\\n    \\n    \",[\"while\",\"#FF7B72\"],\" \",[\"(left\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"right) {\",\"#C9D1D9\"],\"\\n        \",[\"// Calculate current area\",\"#8B949E\"],\"\\n        \",[\"const\",\"#FF7B72\"],\" \",[\"width\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"right\",\"#C9D1D9\"],\" \",[\"-\",\"#FF7B72\"],\" \",[\"left;\",\"#C9D1D9\"],\"\\n        \",[\"const\",\"#FF7B72\"],\" \",[\"currentHeight\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"Math.\",\"#C9D1D9\"],[\"min\",\"#D2A8FF\"],[\"(height[left], height[right]);\",\"#C9D1D9\"],\"\\n        \",[\"const\",\"#FF7B72\"],\" \",[\"currentArea\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"width\",\"#C9D1D9\"],\" \",[\"*\",\"#FF7B72\"],\" \",[\"currentHeight;\",\"#C9D1D9\"],\"\\n        \\n        \",[\"maxWater\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"Math.\",\"#C9D1D9\"],[\"max\",\"#D2A8FF\"],[\"(maxWater, currentArea);\",\"#C9D1D9\"],\"\\n        \\n        \",[\"// Move the pointer with smaller height\",\"#8B949E\"],\"\\n        \",[\"if\",\"#FF7B72\"],\" \",[\"(height[left]\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"height[right]) {\",\"#C9D1D9\"],\"\\n            \",[\"left\",\"#C9D1D9\"],[\"++\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n        \",[\"}\",\"#C9D1D9\"],\" \",[\"else\",\"#FF7B72\"],\" \",[\"{\",\"#C9D1D9\"],\"\\n            \",[\"right\",\"#C9D1D9\"],[\"--\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n        \",[\"}\",\"#C9D1D9\"],\"\\n    \",[\"}\",\"#C9D1D9\"],\"\\n    \\n    \",[\"return\",\"#FF7B72\"],\" \",[\"maxWater;\",\"#C9D1D9\"],\"\\n\",[\"}\",\"#C9D1D9\"],\"\\n\\n\",[\"// Example\",\"#8B949E\"],\"\\n\",[\"const\",\"#FF7B72\"],\" \",[\"heights\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"[\",\"#C9D1D9\"],[\"1\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"8\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"6\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"2\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"5\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"4\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"8\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"3\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"7\",\"#79C0FF\"],[\"];\",\"#C9D1D9\"],\"\\n\",[\"console.\",\"#C9D1D9\"],[\"log\",\"#D2A8FF\"],[\"(\",\"#C9D1D9\"],[\"maxArea\",\"#D2A8FF\"],[\"(heights));\",\"#C9D1D9\"],\" \",[\"// Output: 49\",\"#8B949E\"]],annotations:[],themeName:\"github-dark\",style:{color:\"#c9d1d9\",background:\"#0d1117\",colorScheme:\"dark\"}}}),\"\\n\",e(i.h2,{children:\"Key Insights and Best Practices\"}),\"\\n\",e(i.h3,{children:\"When to Use Two Pointers\"}),\"\\n\",t(i.ol,{children:[\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Sorted arrays or strings\"}),\" - The sorted property enables intelligent pointer movement\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Finding pairs or triplets\"}),\" - Especially when looking for specific sums\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Palindrome problems\"}),\" - Compare characters from both ends\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Removing duplicates\"}),\" - Maintain unique elements efficiently\"]}),\"\\n\"]}),\"\\n\",e(i.h3,{children:\"Common Patterns\"}),\"\\n\",e(o,{codeblock:{value:\"// Pattern 1: Convergent pointers\\nint left = 0, right = n - 1;\\nwhile (left < right) {\\n    // Process current pair\\n    if (condition) {\\n        left++;\\n    } else {\\n        right--;\\n    }\\n}\\n\\n// Pattern 2: Same direction (sliding window)\\nint slow = 0, fast = 0;\\nwhile (fast < n) {\\n    // Expand window\\n    fast++;\\n    \\n    // Contract window if needed\\n    while (window_invalid) {\\n        slow++;\\n    }\\n}\",lang:\"cpp\",meta:\"\",code:\"// Pattern 1: Convergent pointers\\nint left = 0, right = n - 1;\\nwhile (left < right) {\\n    // Process current pair\\n    if (condition) {\\n        left++;\\n    } else {\\n        right--;\\n    }\\n}\\n\\n// Pattern 2: Same direction (sliding window)\\nint slow = 0, fast = 0;\\nwhile (fast < n) {\\n    // Expand window\\n    fast++;\\n    \\n    // Contract window if needed\\n    while (window_invalid) {\\n        slow++;\\n    }\\n}\",tokens:[[\"// Pattern 1: Convergent pointers\",\"#8B949E\"],\"\\n\",[\"int\",\"#FF7B72\"],\" \",[\"left\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\", right\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"n\",\"#C9D1D9\"],\" \",[\"-\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],[\";\",\"#C9D1D9\"],\"\\n\",[\"while\",\"#FF7B72\"],\" \",[\"(left\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"right) {\",\"#C9D1D9\"],\"\\n    \",[\"// Process current pair\",\"#8B949E\"],\"\\n    \",[\"if\",\"#FF7B72\"],\" \",[\"(condition) {\",\"#C9D1D9\"],\"\\n        \",[\"left\",\"#C9D1D9\"],[\"++\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n    \",[\"}\",\"#C9D1D9\"],\" \",[\"else\",\"#FF7B72\"],\" \",[\"{\",\"#C9D1D9\"],\"\\n        \",[\"right\",\"#C9D1D9\"],[\"--\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n    \",[\"}\",\"#C9D1D9\"],\"\\n\",[\"}\",\"#C9D1D9\"],\"\\n\\n\",[\"// Pattern 2: Same direction (sliding window)\",\"#8B949E\"],\"\\n\",[\"int\",\"#FF7B72\"],\" \",[\"slow\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\", fast\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],[\";\",\"#C9D1D9\"],\"\\n\",[\"while\",\"#FF7B72\"],\" \",[\"(fast\",\"#C9D1D9\"],\" \",[\"<\",\"#FF7B72\"],\" \",[\"n) {\",\"#C9D1D9\"],\"\\n    \",[\"// Expand window\",\"#8B949E\"],\"\\n    \",[\"fast\",\"#C9D1D9\"],[\"++\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n    \\n    \",[\"// Contract window if needed\",\"#8B949E\"],\"\\n    \",[\"while\",\"#FF7B72\"],\" \",[\"(window_invalid) {\",\"#C9D1D9\"],\"\\n        \",[\"slow\",\"#C9D1D9\"],[\"++\",\"#FF7B72\"],[\";\",\"#C9D1D9\"],\"\\n    \",[\"}\",\"#C9D1D9\"],\"\\n\",[\"}\",\"#C9D1D9\"]],annotations:[],themeName:\"github-dark\",style:{color:\"#c9d1d9\",background:\"#0d1117\",colorScheme:\"dark\"}}}),\"\\n\",e(i.h2,{children:\"Time and Space Complexity\"}),\"\\n\",e(i.p,{children:\"The two-pointer technique typically achieves:\"}),\"\\n\",t(i.ul,{children:[\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Time Complexity\"}),\": O(n) - single pass through the data\"]}),\"\\n\",t(i.li,{children:[e(i.strong,{children:\"Space Complexity\"}),\": O(1) - only using two pointer variables\"]}),\"\\n\"]}),\"\\n\",e(i.p,{children:\"This is a significant improvement over brute force O(n²) approaches that check all pairs.\"}),\"\\n\",e(i.h2,{children:\"Practice Problems\"}),\"\\n\",e(i.p,{children:\"To master this technique, try solving these problems:\"}),\"\\n\",t(i.ol,{children:[\"\\n\",e(i.li,{children:e(i.strong,{children:\"Remove Duplicates from Sorted Array\"})}),\"\\n\",e(i.li,{children:e(i.strong,{children:\"Valid Palindrome\"})}),\"\\n\",e(i.li,{children:e(i.strong,{children:\"3Sum Problem\"})}),\"\\n\",e(i.li,{children:e(i.strong,{children:\"Trapping Rain Water\"})}),\"\\n\",e(i.li,{children:e(i.strong,{children:\"Sort Colors (Dutch National Flag)\"})}),\"\\n\"]}),\"\\n\",e(i.p,{children:\"Each problem will help you recognize different variations of the two-pointer pattern and build your intuition for when to apply this technique.\"}),\"\\n\",e(i.h2,{children:\"Conclusion\"}),\"\\n\",e(i.p,{children:\"The two-pointer technique is a fundamental algorithmic pattern that every programmer should master. Its elegance lies in transforming complex O(n²) problems into efficient O(n) solutions through clever pointer manipulation. Practice with various problems to develop the intuition for recognizing when this pattern applies.\"}),\"\\n\",e(i.h1,{children:\"Sample Here\"}),\"\\n\",e(o,{codeblock:{value:\"function lorem(ipsum, dolor = 1) {\\n  const sit = ipsum == null ? 0 : 1\\n  dolor = sit - amet(dolor)\\n  return sit ? consectetur(ipsum) : []\\n}\",lang:\"javascript\",meta:\"index.js\",code:\"function lorem(ipsum, dolor = 1) {\\n  const sit = ipsum == null ? 0 : 1\\n  dolor = sit - amet(dolor)\\n  return sit ? consectetur(ipsum) : []\\n}\",tokens:[[\"function\",\"#FF7B72\"],\" \",[\"lorem\",\"#D2A8FF\"],[\"(\",\"#C9D1D9\"],[\"ipsum\",\"#FFA657\"],[\",\",\"#C9D1D9\"],\" \",[\"dolor\",\"#FFA657\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],[\") {\",\"#C9D1D9\"],\"\\n  \",[\"const\",\"#FF7B72\"],\" \",[\"sit\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"ipsum\",\"#C9D1D9\"],\" \",[\"==\",\"#FF7B72\"],\" \",[\"null\",\"#79C0FF\"],\" \",[\"?\",\"#FF7B72\"],\" \",[\"0\",\"#79C0FF\"],\" \",[\":\",\"#FF7B72\"],\" \",[\"1\",\"#79C0FF\"],\"\\n  \",[\"dolor\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"sit\",\"#C9D1D9\"],\" \",[\"-\",\"#FF7B72\"],\" \",[\"amet\",\"#D2A8FF\"],[\"(dolor)\",\"#C9D1D9\"],\"\\n  \",[\"return\",\"#FF7B72\"],\" \",[\"sit\",\"#C9D1D9\"],\" \",[\"?\",\"#FF7B72\"],\" \",[\"consectetur\",\"#D2A8FF\"],[\"(ipsum)\",\"#C9D1D9\"],\" \",[\":\",\"#FF7B72\"],\" \",[\"[]\",\"#C9D1D9\"],\"\\n\",[\"}\",\"#C9D1D9\"]],annotations:[],themeName:\"github-dark\",style:{color:\"#c9d1d9\",background:\"#0d1117\",colorScheme:\"dark\"}}}),\"\\n\",e(i.p,{children:\"HOHOHO\"}),\"\\n\",e(o,{codeblock:{value:\"const lorem = ipsum(dolor, sit)\\n// !callout[/amet/] This is a callout\\nconst [amet, consectetur] = [0, 0]\\nlorem.adipiscing((sed, elit) => {\\n  if (sed) {\\n    amet += elit\\n  }\\n})\",lang:\"javascript\",meta:\"\",code:\"const lorem = ipsum(dolor, sit)\\nconst [amet, consectetur] = [0, 0]\\nlorem.adipiscing((sed, elit) => {\\n  if (sed) {\\n    amet += elit\\n  }\\n})\",tokens:[[\"const\",\"#FF7B72\"],\" \",[\"lorem\",\"#79C0FF\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"ipsum\",\"#D2A8FF\"],[\"(dolor, sit)\",\"#C9D1D9\"],\"\\n\",[\"const\",\"#FF7B72\"],\" \",[\"[\",\"#C9D1D9\"],[\"amet\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"consectetur\",\"#79C0FF\"],[\"]\",\"#C9D1D9\"],\" \",[\"=\",\"#FF7B72\"],\" \",[\"[\",\"#C9D1D9\"],[\"0\",\"#79C0FF\"],[\",\",\"#C9D1D9\"],\" \",[\"0\",\"#79C0FF\"],[\"]\",\"#C9D1D9\"],\"\\n\",[\"lorem.\",\"#C9D1D9\"],[\"adipiscing\",\"#D2A8FF\"],[\"((\",\"#C9D1D9\"],[\"sed\",\"#FFA657\"],[\",\",\"#C9D1D9\"],\" \",[\"elit\",\"#FFA657\"],[\")\",\"#C9D1D9\"],\" \",[\"=>\",\"#FF7B72\"],\" \",[\"{\",\"#C9D1D9\"],\"\\n  \",[\"if\",\"#FF7B72\"],\" \",[\"(sed) {\",\"#C9D1D9\"],\"\\n    \",[\"amet\",\"#C9D1D9\"],\" \",[\"+=\",\"#FF7B72\"],\" \",[\"elit\",\"#C9D1D9\"],\"\\n  \",[\"}\",\"#C9D1D9\"],\"\\n\",[\"})\",\"#C9D1D9\"]],annotations:[{name:\"callout\",query:\"This is a callout\",lineNumber:2,fromColumn:8,toColumn:11}],themeName:\"github-dark\",style:{color:\"#c9d1d9\",background:\"#0d1117\",colorScheme:\"dark\"}}})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};"
  }
]